{
    "starting help":"Welcome to the inbuilt help.\n\nIf this is your first time using this program, please use help <command> to learn what each command does and requires.\nhelp <command> brings up the associated help text for the specified command.\n Feel free to try 'help help'.\n\nList of commands in this program:\nencrypt\ndecrypt\nhelp\nabout\nlicense\ngenerate\nexit",
    "encrypt":"encrypt <key> <nonce> <plaintext> <associated data>:optional\n\n<key>:64 hexadecimal characters, not case sensitive and no proceeding 0x\n<nonce>:48 hexadecimal characters, not case sensitive and no proceeding 0x\n<plaintext>:any utf-8 encoded string\n<associated data>:any utf-8 encoded string\n\nThis command is used to encrypt the provided plaintext and protect the provided associated data from tampering.\nIf no associated data is provided, a default will be used.\nThe command will output base64 encoded ciphertext, associated data, and message authentication code(mac).\nAll three and the cryptomaterial(key and nonce) are needed for future decryption.",
    "decrypt":"decrypt <key> <nonce> <ciphertext> <associated data> <mac>\n\n<key>:64 hexadecimal characters, not case sensitive and no proceeding 0x\n<nonce>:48 hexadecimal characters, not case sensitive and no proceeding 0x\n<ciphertext>:fully valid base64 encoded string, case sensitive\n<associated data>:fully valid base64 encoded string, case sensitive\n<mac>:fully valid base64 encoded string, case sensitive and must decode to 16 bytes\n\nThis command is used to decrypt and verify the integrity of the ciphertext/associated data/mac group given the key and nonce.\nAll components are necessary to sucessfully decrypt.\nThe program has basic verification built in to prevent entry errors(eg invalid base64 or missing/extra data for key/nonce/mac).\nIf authentication and decryption is sucessful the command will return decoded utf-8 plaintext and associated data.",
    "help":"help <command>:optional\n\n<command>: one of the following(encrypt, decrypt, help, about, license, generate, exit)\nThis command will return basic help information when entered with no arguments and will display specific help information when provided a specific command as it's argument.",
    "about":"about\n\n\n\nThis command displays text talking about the use of this program.",
    "license":"license\n\n\n\nThis command displays the license for this program.",
    "generate":"generate <mode> <type> <data>:optional\n\n<mode>:'pad' or 'random'\n<type>:'key' or 'nonce'\n<data>:hexadecimal characters, not case sensitive and no proceeding 0x\n\nThis command is used to generate keys and nonces with influence from data.\nIf pad mode is used, missing bytes will be filled with zeros.\nIf random mode is used, missing bytes will be filled with random data from the strongest source of entropy(retrived from python secrets module).\nThe type argument defines the size of the output and therefore whether it can be used as a key or nonce.\nIf data is specified, the program will first try to fill the bytes with the provided data and discard the excess if any exists.\n It will then proceed to use the provided mode to complete the output as specified.",
    "exit":"exit\n\n\n\nThis command will cause the program to exit",
    "invalid help arg":"It appears that you have entered a argument for help that does not appear in the program.\nIf this is a bug, submit a pull request with relevant information to reproduce this to https://github.com/cryptoam322/Monocypher-AEAD-explorer.\nOtherwise try one of the following commands as an argument:\nencrypt\ndecrypt\nhelp\nabout\nlicense\ngenerate\nexit",
    "too many args":"The help command can not take more than one argument. Please try again."
}